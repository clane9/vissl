# @package _global_
config:
  VERBOSE: False
  LOG_FREQUENCY: 10
  TEST_ONLY: False
  TEST_MODEL: False
  SEED_VALUE: 0
  MULTI_PROCESSING_METHOD: forkserver
  HOOKS:
    PERF_STATS:
      MONITOR_PERF_STATS: True
      ROLLING_BTIME_FREQ: 313
  DATA:
    NUM_DATALOADER_WORKERS: 10
    TRAIN:
      DATA_SOURCES: [disk_folder]
      DATASET_NAMES: [imagenette_160_folder]
      BATCHSIZE_PER_REPLICA: 256
      LABEL_TYPE: sample_index    # just an implementation detail. Label isn't used
      TRANSFORMS:
        - name: ImgReplicatePil
          num_times: 2
        - name: RandomResizedCrop
          size: 224
        - name: RandomHorizontalFlip
          p: 0.5
          # FIXME: using wrong saturation.
          # Authors used ColorJitter(0.4, 0.4, 0.2, 0.1) (appendix C.1)
        - name: ImgPilColorDistortion
          strength: 0.5
        - name: ImgPilGaussianBlur
          p: 0.5
          radius_min: 0.1
          radius_max: 2.0
        - name: ImgPilRandomSolarize
          p: 0.1
        - name: ToTensor
        - name: Normalize
          mean: [0.485, 0.456, 0.406]
          std: [0.229, 0.224, 0.225]
      COLLATE_FUNCTION: simclr_collator
      MMAP_MODE: True
      COPY_TO_LOCAL_DISK: False
      COPY_DESTINATION_DIR: /tmp/imagenet1k/
      DROP_LAST: True
  TRAINER:
    TRAIN_STEP_NAME: standard_train_step
  METERS:
    name: ""
  MODEL:
    TRUNK:
      NAME: resnet
      RESNETS:
        DEPTH: 18
    HEAD:
      PARAMS: [
        ["mlp", {"dims": [2048, 4096, 4096], "use_bn": True, "use_relu": True, "skip_last_layer_relu_bn": True}],
      ]
    SYNC_BN_CONFIG:
      CONVERT_BN_TO_SYNC_BN: True
      SYNC_BN_TYPE: apex
      GROUP_SIZE: 2  # 2 gpus per node
    AMP_PARAMS:
      USE_AMP: False
      # USE_AMP: True
      AMP_ARGS: {"opt_level": "O1"}
  LOSS:
      name: vicreg_loss
      vicreg_loss:
        lambda_: 25.0
        mu: 25.0
        nu: 1.0
  OPTIMIZER:
      name: lars
      weight_decay: 1.0e-6
      momentum: 0.9
      # TODO: check these params
      nesterov: False
      regularize_bn: False
      regularize_bias: False
      exclude_bias_and_norm: True
      # num_epochs: 100
      # num_epochs: 200
      # num_epochs: 400
      # num_epochs: 500
      # num_epochs: 600
      # num_epochs: 800
      num_epochs: 1000
      param_schedulers:
        lr:
          auto_lr_scaling:
            auto_scale: true
            base_value: 0.5
            base_lr_batch_size: 256
          name: composite
          # TODO: check that this schedule gives the correct behavior
          schedulers:
            - name: cosine
              start_value: 0.0
              end_value: 0.5
            - name: cosine
              start_value: 0.5
              end_value: 0.002
          update_interval: step
          interval_scaling: [rescaled, fixed]
          lengths: [0.1, 0.9]               # 100ep
          # lengths: [0.05, 0.95]             # 200ep
          # lengths: [0.025, 0.975]           # 400ep
          # lengths: [0.02, 0.98]             # 500ep
          # lengths: [0.0166667, 0.9833333]   # 600ep
          # lengths: [0.0125, 0.9875]         # 800ep
          # lengths: [0.01, 0.99]               # 1000ep
  DISTRIBUTED:
    BACKEND: nccl
    NUM_NODES: 1
    NUM_PROC_PER_NODE: 1
    RUN_ID: xxxxxxxxxxxxxxxxxxxxxxxxxxxx
    INIT_METHOD: tcp
    NCCL_DEBUG: True
  MACHINE:
    DEVICE: gpu
  CHECKPOINT:
    AUTO_RESUME: True
    CHECKPOINT_FREQUENCY: 100
    CHECKPOINT_ITER_FREQUENCY: -1  # set this variable to checkpoint every few iterations
