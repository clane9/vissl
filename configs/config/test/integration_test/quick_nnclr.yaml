# @package _global_
config:
  VERBOSE: False
  LOG_FREQUENCY: 1
  TEST_ONLY: False
  TEST_MODEL: False
  SEED_VALUE: 0
  MULTI_PROCESSING_METHOD: forkserver
  HOOKS:
    PERF_STATS:
      MONITOR_PERF_STATS: True
      PERF_STAT_FREQUENCY: 10
      ROLLING_BTIME_FREQ: 5
  DATA:
    NUM_DATALOADER_WORKERS: 5
    TRAIN:
      DATA_SOURCES: [disk_filelist]
      DATASET_NAMES: [imagenet1k_filelist]
      BATCHSIZE_PER_REPLICA: 64
      LABEL_TYPE: sample_index    # just an implementation detail. Label isn't used
      TRANSFORMS:
        - name: ImgReplicatePil
          num_times: 2
        - name: RandomResizedCrop
          size: 224
        - name: RandomHorizontalFlip
          p: 0.5
        - name: ImgPilColorDistortion
          strength: 1.0
        - name: ImgPilGaussianBlur
          p: 0.5
          radius_min: 0.1
          radius_max: 2.0
        - name: ToTensor
        - name: Normalize
          mean: [0.485, 0.456, 0.406]
          std: [0.229, 0.224, 0.225]
      COLLATE_FUNCTION: simclr_collator
      MMAP_MODE: True
      COPY_TO_LOCAL_DISK: False
      DATA_LIMIT: 500
      DROP_LAST: True
      COPY_DESTINATION_DIR: "/tmp/imagenet1k"
  TRAINER:
    TRAIN_STEP_NAME: standard_train_step
  METERS:
    name: ""
  MODEL:
    TRUNK:
      NAME: resnet
      RESNETS:
        DEPTH: 50
    HEAD:
      PARAMS: [
        # NOTE: NNCLR includes bn but not relu on last layer of projection.
        ["mlp", {"dims": [2048, 2048, 2048, 256], "use_relu": True, "use_bn": True}],
        ["skip_mlp", {"dims": [256, 2048, 256], "use_relu": True, "use_bn": True}]
      ]
    SYNC_BN_CONFIG:
      CONVERT_BN_TO_SYNC_BN: True
      SYNC_BN_TYPE: pytorch
    AMP_PARAMS:
      USE_AMP: False
      AMP_ARGS: {"opt_level": "O3", "keep_batchnorm_fp32": True, "master_weights": True, "loss_scale": "dynamic"}
  LOSS:
    name: nnclr_loss
  OPTIMIZER:
      # optimizer settings taken from Byol repro (v2):
      # https://github.com/facebookresearch/vissl/pull/454
      # Byol seems to be the starting point for this method
      name: lars
      eta: 0.001
      weight_decay: 1.0e-6
      momentum: 0.9
      nesterov: False
      num_epochs: 2
      # num_epochs: 100
      regularize_bn: False
      regularize_bias: False
      exclude_bias_and_norm: True
      param_schedulers:
        lr:
          auto_lr_scaling:
            auto_scale: true
            base_value: 0.3
            base_lr_batch_size: 256
          name: composite
          schedulers:
            - name: linear
              start_value: 0.00001
              end_value: 0.3 # Automatically rescaled if needed
            - name: cosine
              start_value: 0.3 # Automatically rescaled if needed
              end_value: 0.000003 # Automatically rescaled if needed
          update_interval: step
          interval_scaling: [rescaled, rescaled]
          lengths: [0.1, 0.9]
  DISTRIBUTED:
    BACKEND: nccl
    NUM_NODES: 1
    NUM_PROC_PER_NODE: 1
    INIT_METHOD: tcp
    RUN_ID: auto
  MACHINE:
    DEVICE: gpu
  CHECKPOINT:
    DIR: "."
    AUTO_RESUME: True
    CHECKPOINT_FREQUENCY: 1
    OVERWRITE_EXISTING: true
